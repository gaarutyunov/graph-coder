[tool.poetry]
name = "graph-coder"
version = "0.1.0"
description = ""
authors = ["German Arutyunov <germanarutyunov@gmail.com>"]
readme = "README.md"
packages = [{include = "graph_coder"}]

[tool.poetry.dependencies]
python = ">=3.9,<=3.11"
catalyst = "^22.4"
astmonkey = {git = "https://github.com/jepler/astmonkey.git", tag = "ast-fixes"}
networkx = "^2.8.8"
aiofiles = "^22.1.0"
pandas = "^1.5.2"
tokenizers = "^0.13.2"
torch = "1.13.1"
fairseq = "^0.12.2"
performer-pytorch = "^1.1.4"
einops = "^0.6.0"
timm = "^0.6.12"
tensorboard = "^2.11.2"
transformers = "^4.25.1"

[tool.poetry.group.dev.dependencies]
black = {version = "^22.12.0", extras = ["d", "jupyter"]}
pytest = "^7.2.0"
coverage = {version = "^7.0.5", extras = ["toml"]}
mypy = "^0.991"
poethepoet = "^0.18.1"
no-implicit-optional = "^1.3"
types-aiofiles = "^22.1.0.6"
types-tqdm = "^4.64.7.11"
pandas-stubs = "^1.5.2.230105"
poetry2conda = "^0.3.0"

[tool.poetry2conda]
name = "graph-coder"

[tool.poetry2conda.dependencies]
torch = { name = "pytorch", channel = "pytorch" }
fairseq = { channel = "pip" }
tokenizers = { channel = "pip" }
catalyst = { channel = "pip" }
transformers = { channel = "pip" }

[tool.black]
line-length = 88
target-version = ["py39"]
include = "\\.pyi?$"
exclude = "tests/data"

[tool.coverage.run]
omit = ["tests/*"]

[tool.coverage.html]
directory = "coverage"

[tool.mypy]
files = "graph_coder"
mypy_path = "graph_coder"
python_version = "3.9"
exclude = "tests/data"
ignore_missing_imports = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poe.tasks]
_test = "coverage run -m pytest"
_report = "coverage report"
_html = "coverage html"
_lcov = "coverage lcov"
test = ["_test", "_report", "_html", "_lcov"]
lint = "mypy ."
format = "black ."
fix_optional = "no_implicit_optional ."
